openapi: "3.0.3"
info:
  title: "rabbit_backend API"
  description: "rabbit_backend API"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080"
tags:
  - name: auth
    description: Auth API
  - name: habits
    description: Habits API
paths:
  /auth/login:
    post:
      tags:
        - auth
      description: log in by user
      requestBody:
        description: A JSON object containing login password
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        403:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /auth/register:
    post:
      tags:
        - auth
      description: Create user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        403:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /auth/changePassword:
    post:
      tags:
        - auth
      description: Change user's password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        400:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        401:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        403:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /habits:
    get:
      tags:
        - habit
      description: "Get all habits"
      responses:
        200:
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Habit"

  /habits/add:
    post:
      tags:
        - habit
      description: "Add a new habit"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Habit"
      responses:
        200:
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Habit"
        400:
          description: "Invalid input"

  /habits/{id}:
    get:
      tags:
        - habit
      description: "Get habit by id"
      parameters:
        - name: id
          in: path
          description: ID of habit to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Habit"

components:
  schemas:
    BaseResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: success
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          example: login@gm.com
        password:
          type: string
          format: password
          example: password
    ChangePassword:
      type: object
      properties:
        email:
          type: string
          format: email
          example: login@gm.com
        currentPassword:
          type: string
          format: password
          example: password
        newPassword:
          type: string
          format: password
          example: password

    Habit:
      type: object
      properties:
        name:
          type: string
          example: sport
        isGood:
          type: boolean
          example: true